//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tests {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.8.1.0")]
    internal sealed partial class TestSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static TestSettings defaultInstance = ((TestSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new TestSettings())));
        
        public static TestSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=.; Initial Catalog={0}; Integrated Security=true; Connection Timeout=" +
            "1000; Max Pool Size=50;")]
        public string ConnectionString {
            get {
                return ((string)(this["ConnectionString"]));
            }
            set {
                this["ConnectionString"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("__resequel_TestScopeDatabase_FeelFreeToDeleteIt")]
        public string DatabaseName {
            get {
                return ((string)(this["DatabaseName"]));
            }
            set {
                this["DatabaseName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("USE [master]\r\nGO\r\n\r\nif exists( select * from sys.databases where name = \'{0}\' )\r\n" +
            "begin\r\n\talter database {0} set single_user with rollback immediate\r\n\tDROP DATABA" +
            "SE {0}\r\nend\r\nGO\r\n\r\n/****** Object:  Database [{0}]    ******/\r\nCREATE DATABASE [" +
            "{0}]\r\n CONTAINMENT = NONE\r\n\r\nALTER DATABASE [{0}] SET COMPATIBILITY_LEVEL = 120\r" +
            "\nGO\r\n\r\n--IF (1 = FULLTEXTSERVICEPROPERTY(\'IsFullTextInstalled\'))\r\n--begin\r\n--EXE" +
            "C [{0}].[dbo].[sp_fulltext_database] @action = \'enable\'\r\n--end\r\n--GO\r\n\r\nALTER DA" +
            "TABASE [{0}] SET ANSI_NULL_DEFAULT OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET ANSI_NUL" +
            "LS OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET ANSI_PADDING OFF \r\nGO\r\n\r\nALTER DATABASE " +
            "[{0}] SET ANSI_WARNINGS OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET ARITHABORT OFF \r\nGO" +
            "\r\n\r\nALTER DATABASE [{0}] SET AUTO_CLOSE OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET AUT" +
            "O_SHRINK OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET AUTO_UPDATE_STATISTICS ON \r\nGO\r\n\r\n" +
            "ALTER DATABASE [{0}] SET CURSOR_CLOSE_ON_COMMIT OFF \r\nGO\r\n\r\nALTER DATABASE [{0}]" +
            " SET CURSOR_DEFAULT  GLOBAL \r\nGO\r\n\r\nALTER DATABASE [{0}] SET CONCAT_NULL_YIELDS_" +
            "NULL OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET NUMERIC_ROUNDABORT OFF \r\nGO\r\n\r\nALTER D" +
            "ATABASE [{0}] SET QUOTED_IDENTIFIER OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET RECURSI" +
            "VE_TRIGGERS OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET  DISABLE_BROKER \r\nGO\r\n\r\nALTER D" +
            "ATABASE [{0}] SET AUTO_UPDATE_STATISTICS_ASYNC OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] " +
            "SET DATE_CORRELATION_OPTIMIZATION OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET TRUSTWORT" +
            "HY OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET ALLOW_SNAPSHOT_ISOLATION OFF \r\nGO\r\n\r\nALT" +
            "ER DATABASE [{0}] SET PARAMETERIZATION SIMPLE \r\nGO\r\n\r\nALTER DATABASE [{0}] SET R" +
            "EAD_COMMITTED_SNAPSHOT OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET HONOR_BROKER_PRIORIT" +
            "Y OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET RECOVERY FULL \r\nGO\r\n\r\nALTER DATABASE [{0}" +
            "] SET  MULTI_USER \r\nGO\r\n\r\nALTER DATABASE [{0}] SET PAGE_VERIFY CHECKSUM  \r\nGO\r\n\r" +
            "\nALTER DATABASE [{0}] SET DB_CHAINING OFF \r\nGO\r\n\r\nALTER DATABASE [{0}] SET FILES" +
            "TREAM( NON_TRANSACTED_ACCESS = OFF ) \r\nGO\r\n\r\nALTER DATABASE [{0}] SET TARGET_REC" +
            "OVERY_TIME = 60 SECONDS \r\nGO\r\n\r\nALTER DATABASE [{0}] SET DELAYED_DURABILITY = DI" +
            "SABLED \r\nGO\r\n\r\n--ALTER DATABASE [{0}] SET QUERY_STORE = OFF\r\n--GO\r\n\r\nALTER DATAB" +
            "ASE [{0}] SET  READ_WRITE \r\nGO\r\n\r\n\r\nUSE [{0}]\r\nGO\r\n/****** Object:  Table [dbo]." +
            "[TestTable0]   ******/\r\nSET ANSI_NULLS ON\r\nGO\r\nSET QUOTED_IDENTIFIER ON\r\nGO\r\nCRE" +
            "ATE TABLE [dbo].[TestTable0](\r\n\t[id] [int] NOT NULL,\r\n\t[name] [varchar](100) NOT" +
            " NULL,\r\n\t[additional] [varchar](100) NULL,\r\n CONSTRAINT [PK_TestTable0] PRIMARY " +
            "KEY CLUSTERED \r\n(\r\n\t[id] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = O" +
            "FF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMA" +
            "RY]\r\n) ON [PRIMARY]\r\nGO\r\n\r\nINSERT [dbo].[TestTable0] ([id], [name]) VALUES (1, N" +
            "\'Record 1\')\r\nGO\r\nINSERT [dbo].[TestTable0] ([id], [name]) VALUES (2, N\'Record 2\'" +
            ")\r\nGO\r\nINSERT [dbo].[TestTable0] ([id], [name]) VALUES (3, N\'Record 3\')\r\nGO\r\n\r\n\r" +
            "\nCREATE NONCLUSTERED INDEX [TestTable0_Index0] ON [dbo].[TestTable0]\r\n(\r\n\t[name]" +
            " ASC\r\n)\r\nINCLUDE ( [additional]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE =" +
            " OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS =" +
            " ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\nGO\r\n\r\n\r\n\r\n\r\nCREATE TABLE [dbo].[TestTa" +
            "ble1](\r\n\t[id] [int] NOT NULL,\r\n\t[name] [varchar](100) NOT NULL,\r\n\t[additional] [" +
            "varchar](100) NULL,\r\n CONSTRAINT [PK_TestTable1] PRIMARY KEY CLUSTERED \r\n(\r\n\t[id" +
            "] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OF" +
            "F, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO" +
            "\r\n\r\nCREATE TABLE [dbo].[TestTable2](\r\n\t[id] [int] NOT NULL,\r\n\t[name] [varchar](1" +
            "00) NOT NULL,\r\n\t[additional] [varchar](100) NULL,\r\n CONSTRAINT [PK_TestTable2] P" +
            "RIMARY KEY CLUSTERED \r\n(\r\n\t[id] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMP" +
            "UTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON" +
            " [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n\r\n\r\nCREATE TABLE [dbo].[TestTable3](\r\n\t[id] [int" +
            "] NOT NULL,\r\n\t[name] [varbinary](max) NOT NULL,\r\n\t[additional] [varbinary](max) " +
            "NULL,\r\n\t[custom_column] [int] NOT NULL,\r\n\t[database_version] [int] NOT NULL,\r\n C" +
            "ONSTRAINT [PK_TestTable3] PRIMARY KEY CLUSTERED \r\n(\r\n\t[id] ASC\r\n)WITH (PAD_INDEX" +
            " = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON" +
            ", ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n\r\n\r\nuse [master]\r\nGO\r" +
            "\n")]
        public string CreateDatabaseScript {
            get {
                return ((string)(this["CreateDatabaseScript"]));
            }
            set {
                this["CreateDatabaseScript"] = value;
            }
        }
    }
}
